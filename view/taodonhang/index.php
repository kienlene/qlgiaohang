<?php
// session_start();
include_once("control/c_dangnhap.php");
$p = new C_dangnhap();
$con = $p->get_lay1kh($_SESSION["tk"]);
if($con){
    $r = $con->fetch_assoc();
    $makh = $r["makh"];
}else{
    echo 'C√≥ l·ªói';
}
?>

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <title>T·∫°o ƒê∆°n H√†ng - H·ªá th·ªëng giao h√†ng</title>
    <style>
            body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f7fa;
}

.container {
    display: flex;
    flex-grow: 1;
    height: 100vh; /* ƒê·∫£m b·∫£o chi·ªÅu cao chi·∫øm to√†n b·ªô m√†n h√¨nh */
    margin: 0;
    padding: 0;
}

.sidebar {
    width: 400px; /* Chi·ªÅu r·ªông sidebar c√≥ th·ªÉ thay ƒë·ªïi t√πy theo y√™u c·∫ßu */
    background-color: #fff;
    padding: 20px;
    border-right: 2px solid #ddd;
    overflow-y: auto;
    box-sizing: border-box; /* ƒê·∫£m b·∫£o t√≠nh ƒë√∫ng k√≠ch th∆∞·ªõc */
}

.card {
    background: white;
    padding: 25px;
    margin-bottom: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
}

.card h3 {
    margin-top: 0;
    color: #333;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    font-weight: bold;
    margin-bottom: 5px;
    display: block;
}

input, select, textarea {
    width: 100%;
    height: 40px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 16px;
    color: #333;
}

.btn {
    background: #3498db;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    margin-top: 10px;
}

.btn:hover {
    background: #2980b4;
}

/* ƒêi·ªÅu ch·ªânh b·∫£n ƒë·ªì */
#map {
    flex-grow: 1; /* ƒê·∫£m b·∫£o b·∫£n ƒë·ªì chi·∫øm to√†n b·ªô kh√¥ng gian c√≤n l·∫°i */
    height: 100%;
    min-width: 0; /* ƒê·∫£m b·∫£o b·∫£n ƒë·ªì kh√¥ng b·ªã nh·ªè l·∫°i qu√° */
    margin: 0;
    box-sizing: border-box; /* ƒê·∫£m b·∫£o t√≠nh ƒë√∫ng k√≠ch th∆∞·ªõc */
}

/* Media query cho c√°c m√†n h√¨nh nh·ªè */
@media (max-width: 768px) {
    .container {
        flex-direction: column; /* Khi m√†n h√¨nh nh·ªè, chuy·ªÉn th√†nh d·∫°ng c·ªôt */
    }

    .sidebar {
        width: 100%; /* Sidebar chi·∫øm to√†n b·ªô chi·ªÅu r·ªông tr√™n m√†n h√¨nh nh·ªè */
    }

    #map {
        width: 100%; /* B·∫£n ƒë·ªì chi·∫øm to√†n b·ªô chi·ªÅu r·ªông tr√™n m√†n h√¨nh nh·ªè */
        height: 400px; /* Gi·∫£m chi·ªÅu cao b·∫£n ƒë·ªì khi tr√™n m√†n h√¨nh nh·ªè */
    }
}



    </style>
    <!-- Link Mapbox -->
    <!-- N·∫°p Mapbox GL JS -->
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.3.0/mapbox-gl.js"></script>
    <!-- N·∫°p CSS c·ªßa Mapbox GL JS -->
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.3.0/mapbox-gl.css" rel="stylesheet" />
    <!-- N·∫°p apbox-gl-geocoder -->
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.3/mapbox-gl-geocoder.min.js"></script>
    <!-- N·∫°p CSS c·ªßa mapbox-gl-geocoder -->
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.3/mapbox-gl-geocoder.css" type="text/css">

</head>

<body>
<div class="container">
    <!-- Sidebar b√™n tr√°i ch·ª©a form nh·∫≠p li·ªáu -->
    <div class="sidebar">
        <form action="" method="POST" id="orderForm">
            <!-- Card th√¥ng tin ng∆∞·ªùi g·ª≠i -->
            <div class="card">
                <h3>Th√¥ng Tin Ng∆∞·ªùi G·ª≠i</h3>
                <div class="form-group">
                    <label>H·ªç v√† T√™n</label>
                    <input type="text" name="txttenng" value="<?php echo $r['tenkh']?>" readonly>
                </div>
                <div class="form-group">
                    <label>S·ªë ƒêi·ªán Tho·∫°i</label>
                    <input type="text" name="txtsdtng" value="<?php echo $r['sdt']?>" readonly>
                </div>
                <div class="form-group">
                    <label>ƒê·ªãa Ch·ªâ</label>
                    <!-- Div n√†y s·∫Ω ch·ª©a Geocoder -->
                    <div id="pickup_geocoder"></div>
                    <input id="pickup_address" type="text" name="txtdiaching" value="<?php echo $r['diachi']?>" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ ng∆∞·ªùi g·ª≠i" >
                   
                </div>
            </div>

            <!-- Card th√¥ng tin ng∆∞·ªùi nh·∫≠n -->
            <div class="card">
                <h3>Th√¥ng Tin Ng∆∞·ªùi Nh·∫≠n</h3>
                <div class="form-group">
                    <label>H·ªç v√† T√™n</label>
                    <input type="text" name="txttennn" required placeholder="Nh·∫≠p h·ªç v√† t√™n ng∆∞·ªùi nh·∫≠n">
                </div>
                <div class="form-group">
                    <label>S·ªë ƒêi·ªán Tho·∫°i</label>
                    <input type="text" name="txtsdtnn" required placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ng∆∞·ªùi nh·∫≠n">
                </div>
                <div class="form-group">
                    <label>ƒê·ªãa Ch·ªâ</label>
                    <!-- Div n√†y s·∫Ω ch·ª©a Geocoder -->
                    <div id="delivery_geocoder"></div>
                    <input id="delivery_address" type="text" name="txtdiachinn" required placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng" >
                </div>
                <div class="form-group">
                    <label>Kho·∫£ng C√°ch (Km)</label>
                    <input type="text" id="distance" name="distance" readonly>
                </div>
                <div class="form-group">
                    <label>Ph√≠ Giao H√†ng (VNƒê)</label>
                    <input type="text" id="shipping_fee" name="shipping_fee" readonly>
                </div>
                
                <!-- <button type="button" onclick="calculateDistance()" class="btn">üîé T√≠nh Kho·∫£ng C√°ch & Ph√≠ Ship</button> -->
            </div>

            <!-- Card th√¥ng tin s·∫£n ph·∫©m -->
            <div class="card">
                <h3>Th√¥ng Tin S·∫£n Ph·∫©m</h3>
                <div id="products-container">
                    <div class="product-row">
                        <div class="form-group">
                            <label>S·∫£n Ph·∫©m</label>
                            <input type="text" name="txtsp[]" placeholder="Nh·∫≠p t√™n s·∫£n ph·∫©m" required>
                        </div>
                        <div class="form-group">
                            <label>S·ªë L∆∞·ª£ng</label>
                            <input type="number" name="txtsl[]" placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng" required>
                        </div>
                        <div class="form-group">
                            <label>Tr·ªçng L∆∞·ª£ng</label>
                            <input type="text" name="txttrongluong[]" placeholder="Nh·∫≠p tr·ªçng l∆∞·ª£ng" required>
                        </div>
                        
                    </div>
                </div>
                <button type="button" onclick="addProduct()" class="btn">Th√™m s·∫£n ph·∫©m</button>
                <div class="form-group">
                            <label>Thu H·ªô</label>
                            <input type="number" name="txtthuho" placeholder="Nh·∫≠p ti·ªÅn thu h·ªô" >
                </div>
                <div class="form-group">
                    <label>Ng∆∞·ªùi tr·∫£ ti·ªÅn</label>
                    <select name="nguoitratien" required>
                        <option value="" selected disabled>-- Ch·ªçn ng∆∞·ªùi tr·∫£ ti·ªÅn --</option>
                        <option value="Ng∆∞·ªùi g·ª≠i">Ng∆∞·ªùi g·ª≠i tr·∫£ ti·ªÅn</option>
                        <option value="Ng∆∞·ªùi nh·∫≠n">Ng∆∞·ªùi nh·∫≠n tr·∫£ ti·ªÅn</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>H√¨nh Th·ª©c Thanh To√°n</label>
                    <select name="payment_method" required>
                        <option value="" selected disabled>-- Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n --</option>
                        <option value="tienmat">Ti·ªÅn m·∫∑t</option>
                        <option value="chuyenkhoan">Chuy·ªÉn kho·∫£n</option>
                    </select>
                </div>
            </div>

            <button type="submit" class="btn" name="btntaodh">üöÄ T·∫°o ƒê∆°n H√†ng</button>
        </form>
    </div>

    <!-- Map ph·∫ßn b√™n ph·∫£i -->
    <div id="map"></div>
</div>

<script>
// JavaScript cho Mapbox v√† t√≠nh to√°n kho·∫£ng c√°ch
mapboxgl.accessToken = 'pk.eyJ1IjoicGh1Y2xvYyIsImEiOiJjbWFtMWwwcWcwZzVwMmtxMHJoNWJieXRzIn0.Ub6AC90KY1yMOXFK5qwLYg';

// T·∫°o b·∫£n ƒë·ªì
const map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v11',
    center: [106.6297, 10.8231], // T·ªça ƒë·ªô H·ªì Ch√≠ Minh
    zoom: 12
});

// Th√™m ƒëi·ªÅu khi·ªÉn zoom
map.addControl(new mapboxgl.NavigationControl());

/// T·∫°o Geocoder cho ng∆∞·ªùi g·ª≠i
  const pickupGeocoder = new MapboxGeocoder({
      accessToken: mapboxgl.accessToken,
      types: 'address',
      placeholder: "Nh·∫≠p ƒë·ªãa ch·ªâ ng∆∞·ªùi g·ª≠i",
      mapboxgl: mapboxgl
  });

  document.getElementById('pickup_geocoder').appendChild(pickupGeocoder.onAdd(map));

  // T·∫°o Geocoder cho ng∆∞·ªùi nh·∫≠n
  const deliveryGeocoder = new MapboxGeocoder({
      accessToken: mapboxgl.accessToken,
      types: 'address',
      placeholder: "Nh·∫≠p ƒë·ªãa ch·ªâ ng∆∞·ªùi nh·∫≠n",
      mapboxgl: mapboxgl
  });

  document.getElementById('delivery_geocoder').appendChild(deliveryGeocoder.onAdd(map));

  // ƒê·∫£m b·∫£o r·∫±ng marker c·ªßa ng∆∞·ªùi nh·∫≠n s·∫Ω gi·ªØ m√†u ƒë·ªè
let pickupMarker = null;  // Ng∆∞·ªùi g·ª≠i (m√†u xanh)
let deliveryMarker = null;  // Ng∆∞·ªùi nh·∫≠n (m√†u ƒë·ªè)

// Khi ng∆∞·ªùi d√πng ch·ªçn ƒë·ªãa ch·ªâ ng∆∞·ªùi g·ª≠i
pickupGeocoder.on('result', function (e) {
    const pickupCoords = e.result.center;

    // N·∫øu ƒë√£ c√≥ marker ng∆∞·ªùi g·ª≠i, c·∫≠p nh·∫≠t l·∫°i t·ªça ƒë·ªô
    if (pickupMarker) {
        pickupMarker.setLngLat(pickupCoords);
    } else {
        // T·∫°o m·ªõi marker cho ng∆∞·ªùi g·ª≠i v√† th√™m v√†o b·∫£n ƒë·ªì
        pickupMarker = new mapboxgl.Marker({ color: 'blue' })
            .setLngLat(pickupCoords)
            .addTo(map);
    }
    document.getElementById('pickup_address').value = e.result.place_name;
});

// Khi ng∆∞·ªùi d√πng ch·ªçn ƒë·ªãa ch·ªâ ng∆∞·ªùi nh·∫≠n
deliveryGeocoder.on('result', function (e) {
    const deliveryCoords = e.result.center;
    if (deliveryMarker) {
        deliveryMarker.remove();
    }
    deliveryMarker = new mapboxgl.Marker({ color: 'red' })
        .setLngLat(deliveryCoords)
        .addTo(map);
    document.getElementById('delivery_address').value = e.result.place_name;
});




// chuy·ªÉn ƒë·ªãa ch·ªâ chu·ªói sang t·ªça ƒë·ªô
async function getCoordinatesFromAddress(address) {
    const encodedAddress = encodeURIComponent(address);
    const url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodedAddress}.json?access_token=${mapboxgl.accessToken}`;

    const res = await fetch(url);
    const data = await res.json();

    if (data.features && data.features.length > 0) {
        return data.features[0].center; // [lng, lat]
    } else {
        throw new Error("Kh√¥ng t√¨m th·∫•y t·ªça ƒë·ªô cho ƒë·ªãa ch·ªâ: " + address);
    }
}
// H√†m t√≠nh kho·∫£ng c√°ch
async function calculateDistance() {

   // Ki·ªÉm tra xem marker c·ªßa ng∆∞·ªùi g·ª≠i v√† ng∆∞·ªùi nh·∫≠n ƒë√£ ƒë∆∞·ª£c ch·ªçn ch∆∞a
    if (!pickupMarker || !deliveryMarker) {
        alert("Vui l√≤ng ch·ªçn ƒë·ªãa ch·ªâ ng∆∞·ªùi g·ª≠i v√† ng∆∞·ªùi nh·∫≠n.");
        return;
    }

      // L·∫•y t·ªça ƒë·ªô c·ªßa ng∆∞·ªùi g·ª≠i v√† ng∆∞·ªùi nh·∫≠n
    const pickupCoords = pickupMarker.getLngLat();
    const deliveryCoords = deliveryMarker.getLngLat();

    const originAddress = document.getElementById('pickup_address').value;
    const destinationAddress = document.getElementById('delivery_address').value;

    try {
        const originCoords = await getCoordinatesFromAddress(originAddress);
        const destinationCoords = await getCoordinatesFromAddress(destinationAddress);

        const directionsUrl = `https://api.mapbox.com/directions/v5/mapbox/driving/${originCoords[0]},${originCoords[1]};${destinationCoords[0]},${destinationCoords[1]}?alternatives=false&geometries=geojson&steps=true&access_token=${mapboxgl.accessToken}`;

        const res = await fetch(directionsUrl);
        const data = await res.json();

        if (data.routes && data.routes.length > 0) {
            const distance = data.routes[0].distance / 1000; // m√©t ‚Üí km
            const duration = data.routes[0].duration / 60; // th·ªùi gian t√≠nh b·∫±ng ph√∫t
            const shippingFee = calculateShippingFee(distance);

            document.getElementById('distance').value = distance.toFixed(2);
            document.getElementById('shipping_fee').value = shippingFee;

            // T√≠nh th·ªùi gian di chuy·ªÉn (gi·ªù)
            const travelTime = duration.toFixed(0); // Th·ªùi gian di chuy·ªÉn (ph√∫t)
            console.log(`Th·ªùi gian di chuy·ªÉn: ${travelTime} ph√∫t`);

            // Hi·ªÉn th·ªã th·ªùi gian di chuy·ªÉn l√™n b·∫£n ƒë·ªì
            const timeDisplay = new mapboxgl.Popup({ offset: 25 })
                .setLngLat([(pickupCoords.lng + deliveryCoords.lng) / 2, (pickupCoords.lat + deliveryCoords.lat) / 2])
                .setHTML(`<b>Th·ªùi gian di chuy·ªÉn: </b>${travelTime} ph√∫t`)
                .addTo(map);

            // --- V·∫º ƒê∆Ø·ªúNG ƒêI TR√äN B·∫¢N ƒê·ªí ---
            const route = data.routes[0].geometry;

            // N·∫øu ƒë√£ c√≥ source th√¨ update, ch∆∞a c√≥ th√¨ add
            if (map.getSource('route')) {
                map.getSource('route').setData(route);
            } else {
                map.addSource('route', {
                    'type': 'geojson',
                    'data': route
                });
                map.addLayer({
                    'id': 'route',
                    'type': 'line',
                    'source': 'route',
                    'layout': {
                        'line-join': 'round',
                        'line-cap': 'round'
                    },
                    'paint': {
                        'line-color': '#3b9ddd',
                        'line-width': 6,
                        'line-opacity': 0.8
                    }
                });
            }
            // Sau khi ƒë√£ c√≥ route (GeoJSON LineString)
            const coordinates = route.coordinates;
            const bounds = new mapboxgl.LngLatBounds(coordinates[0], coordinates[0]);
            for (const coord of coordinates) {
                bounds.extend(coord);
            }
            map.fitBounds(bounds, { padding: 40 });
        } else {
            alert("Kh√¥ng t√¨m ƒë∆∞·ª£c l·ªô tr√¨nh.");
        }
    } catch (error) {
        console.error(error);
        alert("L·ªói khi t√≠nh kho·∫£ng c√°ch: " + error.message);
    }
    
}


function calculateShippingFee(distance) {
    const rate = 5000; // 5.000 VNƒê/km
    return Math.round(distance * rate);
}

// Khi ch·ªçn ng∆∞·ªùi tr·∫£ ti·ªÅn, ki·ªÉm tra ƒë·ªÉ ·∫©n ho·∫∑c hi·ªán select h√¨nh th·ª©c thanh to√°n
document.querySelector('select[name="nguoitratien"]').addEventListener('change', function() {
    const paymentMethodSelect = document.querySelector('select[name="payment_method"]');
    if (this.value === "Ng∆∞·ªùi nh·∫≠n") {
        // N·∫øu ch·ªçn Ng∆∞·ªùi nh·∫≠n tr·∫£ ti·ªÅn, disable v√† reset select h√¨nh th·ª©c thanh to√°n
        paymentMethodSelect.value = "";
        paymentMethodSelect.disabled = true;
    } else {
        // Ng∆∞·ªùi g·ª≠i tr·∫£ ti·ªÅn th√¨ cho ph√©p ch·ªçn b√¨nh th∆∞·ªùng
        paymentMethodSelect.disabled = false;
    }
});

// Khi load trang, ki·ªÉm tra l·∫°i l·∫ßn ƒë·∫ßu (n·∫øu c√≥ gi√° tr·ªã ƒë∆∞·ª£c ch·ªçn)
window.addEventListener('DOMContentLoaded', function() {
    const nguoitratienSelect = document.querySelector('select[name="nguoitratien"]');
    const paymentMethodSelect = document.querySelector('select[name="payment_method"]');
    if (nguoitratienSelect.value === "Ng∆∞·ªùi nh·∫≠n") {
        paymentMethodSelect.value = "";
        paymentMethodSelect.disabled = true;
    } else {
        paymentMethodSelect.disabled = false;
    }
});

</script>

<?php
// PHP x·ª≠ l√Ω ƒë∆°n h√†ng
if (isset($_POST["btntaodh"])) {
    $tenng = $_POST["txttenng"];
    $sdtng = $_POST["txtsdtng"];
    $diaching = $_POST["txtdiaching"];
    $ngaydat = date('Y-m-d');
    $tennn = $_POST["txttennn"];
    $sdtnn = $_POST["txtsdtnn"];
    $diachinn = $_POST["txtdiachinn"];
    $distance = $_POST["distance"];
    // $shipping_fee = $_POST["shipping_fee"];
    $shipping_fee = 30;
    $tinhtranghd = 'Ch·ªù l·∫•y';
    $nguoitra = $_REQUEST["nguoitratien"];
    $hinhthuctt = $_REQUEST['payment_method'] ?? null;
    $thanhtoan = 'Ch∆∞a thanh to√°n';
    $thuho = $_REQUEST['txtthuho'] !== '' ? (float)$_REQUEST['txtthuho'] : 0;


    // C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
    $p->get_capnhatkh($makh, $tenng, $sdtng, $diaching);
    
    // T·∫°o ƒë∆°n h√†ng
    $tao = $p->get_taodonhang($makh, $ngaydat, $tennn, $sdtnn, $diachinn, $tinhtranghd, $shipping_fee, $thuho, $nguoitra, $hinhthuctt, $thanhtoan);
    
    if ($tao) {
        // L·∫∑p qua c√°c s·∫£n ph·∫©m v√† l∆∞u v√†o chi ti·∫øt ƒë∆°n h√†ng
        foreach ($_POST["txtsp"] as $index => $tensp) {
            $sl = $_POST["txtsl"][$index];
            $tl = $_POST["txttrongluong"][$index];
            
            $p->get_taochitietdh($tao, $tensp, $sl, $tl);
        }
        
        // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn cho ƒë∆°n h√†ng
        // $p->get_capnhatdh($tao, $tongtien);

        // ƒêi·ªÅu h∆∞·ªõng t·ªõi trang thanh to√°n ho·∫∑c th√¥ng b√°o
        if ($_POST['payment_method'] == "chuyenkhoan") {
            echo "<script>window.location.href='customer_home.php?madh={$tao}'</script>";
        } else {
            echo "<script>alert('ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c t·∫°o ch·ªù shipper ƒë·∫øn l·∫•y h√†ng'); window.location.href='customer_home.php';</script>";
        }
    } else {
        echo "<script>alert('Vui l√≤ng t·∫°o l·∫°i ƒë∆°n h√†ng');</script>";
    }
}


?>
</body>
</html>




